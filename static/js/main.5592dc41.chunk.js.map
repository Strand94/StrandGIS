{"version":3,"sources":["Map/MainMap.js","sidebar/Layers.js","sidebar/tools/Buffer.js","sidebar/tools/Dissolve.js","sidebar/Sidebar.js","App.js","registerServiceWorker.js","index.js"],"names":["config","center","zoomControl","zoom","scrollwheel","legends","infoControl","attributionControl","uri","params","attribution","id","accessToken","MainMap","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","map","tileLayer","geojsonLayer","geojson","_mapNode","onEachFeature","bind","assertThisInitialized","getData","init","prevProps","prevState","console","log","addGeoJSONLayer","remove","setState","L","geoJson","setStyle","className","addTo","target","feature","layer","properties","NAME","popupContent","concat","bindPopup","control","position","scale","_this2","lat","lng","react_default","a","createElement","ref","node","Component","Layers","newest_file_name","layer_list","readGeoJSONFile","toConsumableArray","Math","random","toString","substr","data","i","length","push","name","key","listItems","d","type","onChange","param","accept","hidden","onClick","activateFileUpload","document","getElementById","click","addEventListener","file_upload","file","files","reader","FileReader","onload","e","new_geojsonToParent","JSON","parse","result","readAsText","alert","require","Buffer","placeholder","executeBuffer","updateBuffer","value","Dissolve","buffer_radius","new_geojson","Sidebar","buffer_geojson","sidebar_tools_Buffer","sidebar_tools_Dissolve","src_sidebar_Layers","App","src_Map_MainMap","src_sidebar_Sidebar","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getElementsByClassName","current","replace","getLayers","list_order","class_name","split","Sortable","create","onEnd","layers","g","getElementsByTagName","map_layer","$","appendTo","reorderLayers","toggle","selected_layer","meters","innerHTML"],"mappings":"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","file":"static/js/main.5592dc41.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-draw/dist/leaflet.draw.css';\r\nimport {Map, TileLayer, Popup, GeoJSON, FeatureGroup, Circle} from 'react-leaflet';\r\nimport './MainMap.css';\r\nimport $ from \"jquery\";\r\nimport geojson from '../geojson/nord_trondelag.json';\r\n// store the map configuration properties in an object,\r\n// we could also move this to a separate file & import it if desired.\r\nlet config = {};\r\nconfig.params = {\r\n  center: [63.43,10.4],\r\n  zoomControl: false,\r\n  zoom: 12,\r\n  scrollwheel: false,\r\n  legends: true,\r\n  infoControl: false,\r\n  attributionControl: true\r\n};\r\nconfig.tileLayer = {\r\n  uri: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n  params: {\r\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n    id: '',\r\n    accessToken: ''\r\n  }\r\n};\r\n\r\n\r\nclass MainMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      map: null,\r\n      tileLayer: null,\r\n      geojsonLayer: null,\r\n      geojson: null,\r\n    };\r\n    this._mapNode = null;\r\n    this.onEachFeature = this.onEachFeature.bind(this);\r\n  }\r\n\r\n  // code to run just after the component \"mounts\" / DOM elements are created\r\n  componentDidMount() {\r\n    // fetches the initial geojson data.\r\n    this.getData();\r\n     // creates the Leaflet map object\r\n    if (!this.state.map) this.init(this._mapNode);\r\n  }\r\n\r\n  // code to run when the component receives new props or state.\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"Component Update\")\r\n    // Render map again if new geojson data is added.\r\n    if (this.state.geojson !== prevState.geojson){\r\n      this.addGeoJSONLayer(this.state.geojson);\r\n    }\r\n\r\n  }\r\n  // code to run just before unmounting the component\r\n  componentWillUnmount() {\r\n    // this destroys the Leaflet map object & related event listeners\r\n    this.state.map.remove();\r\n  }\r\n\r\n// Loads the initial geojson data. (TODO: May be removed in future)\r\n  getData() {\r\n    this.setState({\r\n      geojson\r\n    });\r\n  }\r\n\r\n// Adds geojson layer to map, while giving it required features and class name\r\n  addGeoJSONLayer(geojson) {\r\n    console.log(\"Add geojon layer\")\r\n    const geojsonLayer = L.geoJson(geojson, {\r\n      onEachFeature: this.onEachFeature,\r\n    });\r\n\r\n    // add our GeoJSON layer to the Leaflet map object\r\n    geojsonLayer.setStyle({'className': 'map-path'}); //will add the required class\r\n    geojsonLayer.addTo(this.state.map);\r\n\r\n    // store the Leaflet GeoJSON layer in our component state.\r\n    this.setState({ geojsonLayer });\r\n   }\r\n\r\n  zoomToFeature(target) {\r\n    var fitBoundsParams = {\r\n      paddingTopLeft: [200,10],\r\n      paddingBottomRight: [10,10]\r\n    };\r\n  }\r\n\r\n  onEachFeature(feature, layer) {\r\n    if (feature.properties && feature.properties.NAME) {\r\n\r\n      // assemble the HTML for the markers' popups (Leaflet's bindPopup method doesn't accept React JSX)\r\n      const popupContent = `<h3>${feature.properties.NAME}</h3>`\r\n\r\n      // add our popups\r\n      layer.bindPopup(popupContent);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n  // Initializs the map\r\n  init(id) {\r\n    if (this.state.map) return;\r\n    // this function creates the Leaflet map object and is called after the Map component mounts\r\n    let map = L.map(id, config.params);\r\n    L.control.zoom({ position: \"bottomleft\"}).addTo(map);\r\n    L.control.scale({ position: \"bottomleft\"}).addTo(map);\r\n\r\n    // a TileLayer is used as the \"basemap\"\r\n    const tileLayer = L.tileLayer(config.tileLayer.uri, config.tileLayer.params).addTo(map);\r\n\r\n    // set our state to include the tile layer\r\n    this.setState({ map, tileLayer });\r\n  }\r\n\r\n  render() {\r\n    //Set the map position and zoom level\r\n    const position = [this.state.lat, this.state.lng]\r\n\r\n    return (\r\n      <div id=\"mapUI\">\r\n         <div ref={(node) => this._mapNode = node} id=\"map\" />\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport function reorderLayers(layers) {\r\n  var i;\r\n  var g = document.getElementsByTagName(\"g\");\r\n  for (i=layers.length; i > -1; i--){\r\n    var map_layer = document.getElementsByClassName(layers[i]+\" leaflet-interactive\")[0]\r\n    console.log(map_layer)\r\n    $(map_layer).appendTo(g);\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default MainMap;\r\n","import React, { Component } from 'react';\r\nimport './Layers.css';\r\nimport { new_geojsonToParent } from './Sidebar.js'\r\n\r\n\r\nclass Layers extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      newest_file_name: null,\r\n      layer_list: []\r\n    }\r\n    this.readGeoJSONFile = this.readGeoJSONFile.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Appending new file name to Layer list with a unique key value.\r\n    if (this.state.newest_file_name !== prevState.newest_file_name ){\r\n      this.setState({\r\n        layer_list: [...this.state.layer_list, [this.state.newest_file_name, Math.random().toString(36).substr(2, 9)]]\r\n        //NOTE: Math.random should be unique (with less than 10.000 simulatanious layers) because of its seeding algorithm.\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Do nothing\r\n  }\r\n\r\n  onChange(state) {\r\n  // Add new layer for the newest, uploaded geojson file.\r\n  }\r\n\r\n\r\n  render(){\r\n    const layer_list = this.state.layer_list\r\n    var data = []\r\n    for (var i = 0; i < layer_list.length; i++) {\r\n      data.push({\"name\":layer_list[i][0],\"key\":layer_list[i][1]})\r\n    }\r\n    const listItems = data.map((d) => <li className=\"layer\" id={d.key}>{d.name}</li>)\r\n\r\n      return(\r\n      <div id=\"layers\">\r\n          <p id=\"subtitle\">Layers</p>\r\n          <p id='sub_info'>Click to select, drag to reorder.</p>\r\n          <div>\r\n              <ul id=\"sortable_layers\" className=\"ui-sortable\">\r\n                  <li className=\"T1 layer active\">Trondheim</li>\r\n                  <li className=\"T2 layer\">Trondheim 2</li>\r\n                  {listItems}\r\n              </ul>\r\n          </div>\r\n          <div>\r\n            <p id=\"subtitle\">Add Layer</p>\r\n            <p id='sub_info'>Click button and upload GeoJSON file.</p>\r\n            <div>\r\n              {/* Hidden input field to handle file upload on button click. */}\r\n              <input id='fileid' type='file' onChange={(param) => this.readGeoJSONFile(param)} accept=\".GeoJSON,.JSON\" hidden/>\r\n              <button onClick={(param) => this.activateFileUpload(param)}>GEOJSON</button>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      )\r\n  }\r\n\r\n  createLayer(){\r\n\r\n  }\r\n\r\n  activateFileUpload(){\r\n    document.getElementById('fileid').click();\r\n    document.getElementById('fileid').addEventListener('change', this.readGeoJSONFile, true);\r\n  }\r\n\r\n //TODO: ADD EXCEPTION HANDELING FOR FILE UPLOAD.\r\n\r\n  // Adding file reading code in Layers as this is the only place it is used.\r\n  readGeoJSONFile(file_upload){\r\n    //Retrieving the first (and only!) File from the FileList object\r\n    var file = file_upload.target.files[0];\r\n    if (file) {\r\n      var reader = new FileReader();\r\n      reader.onload = function(e) {\r\n        const new_geojson = JSON.parse(e.target.result)\r\n\r\n        // Sending the JSON extracted from file to Parent component.\r\n        new_geojsonToParent(new_geojson)\r\n\r\n      }\r\n      reader.readAsText(file);\r\n    } else {\r\n      alert(\"Failed to load file\");\r\n    }\r\n    // fetching file name for adding layer.\r\n    const newest_file_name = file.name;\r\n    this.setState({newest_file_name})\r\n\r\n  }\r\n}\r\n\r\nexport default Layers;\r\n","import React, { Component } from 'react';\r\nimport \"./Buffer.css\"\r\nimport MainMap from '../../Map/MainMap'\r\nimport L from 'leaflet'\r\nimport {updateBuffer} from '../Sidebar.js'\r\nimport geojson from '../../geojson/sor_trondelag.json';\r\nvar buffer = require('@turf/buffer')\r\nvar turf = require('@turf/turf')\r\n\r\n\r\nclass Buffer extends Component{\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n    render(){\r\n        return(\r\n        <div>\r\n           <div id=\"tool_title\">Distance:</div>\r\n           <input id=\"buffer_number\" type=\"number\" placeholder=\"Buffer in meters\"></input>\r\n           <br></br>\r\n           <button onClick={(param) => this.executeBuffer(param)}>Apply</button>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    executeBuffer(){\r\n      var number = document.getElementById('buffer_number').value;\r\n      updateBuffer(number)\r\n    }\r\n}\r\n\r\n\r\nexport function setBuffer(geojson, meters){\r\n  MainMap.setState(geojson=null)\r\n}\r\n\r\nexport default Buffer;\r\n","import React, { Component } from 'react';\r\nimport \"./Dissolve.css\"\r\n\r\nclass Dissolve extends Component{\r\n    render(){\r\n        return(\r\n        <div>\r\n           <button id=\"apply_dissolve\">Apply</button>\r\n        </div>\r\n        )       \r\n    }\r\n}\r\n\r\nexport default Dissolve;","import React, { Component } from 'react';\r\nimport Layers from \"./Layers\";\r\nimport \"./Sidebar.css\";\r\nimport Buffer from './tools/Buffer';\r\nimport Dissolve from './tools/Dissolve';\r\n\r\nexport function updateBuffer(buffer_radius) {\r\n  var buffer_radius = buffer_radius;\r\n\r\n  this.setState({buffer_radius})\r\n}\r\n\r\nexport function new_geojsonToParent(new_geojson) {\r\n  var new_geojson = new_geojson\r\n  this.setState({ new_geojson })\r\n}\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      buffer_radius: 10,\r\n      buffer_geojson: null,\r\n      new_geojson: null,\r\n    }\r\n    updateBuffer = updateBuffer.bind(this)\r\n    new_geojsonToParent = new_geojsonToParent.bind(this)\r\n\r\n  }\r\n\r\n    render() {\r\n        return ([\r\n            <div id=\"sidebar_content\">\r\n                <div id=\"sidebar_title_div\">\r\n                    <h1 id=\"title\">App name</h1>\r\n                </div>\r\n                <div id=\"tools\">\r\n                    <p id=\"subtitle\">Tools</p>\r\n                    <ul id=\"tool_layer\">\r\n                        <li className=\"buffer\">\r\n                            Buffer {this.state.buffer_radius}\r\n                        </li>\r\n                        <li hidden className=\"buffer_content\"><Buffer/></li>\r\n                        <li className=\"dissolve\">\r\n                            Dissolve\r\n                        </li>\r\n                        <li hidden className=\"dissolve_content\"><Dissolve/></li>\r\n                        <li className=\"union\">\r\n                            Union\r\n                        </li>\r\n                        <li hidden className=\"union_content\"></li>\r\n                        <li className=\"intersection\">\r\n                            Intersection\r\n                        </li>\r\n                        <li hidden className=\"intersection_content\"></li>\r\n                        <li className=\"diffrence\">\r\n                            Diffrence\r\n                        </li>\r\n                        <li hidden className=\"diffrence_content\"></li>\r\n                        <li className=\"extract\">\r\n                            Extract Feature\r\n                        </li>\r\n                        <li hidden className=\"extract_content\"></li>\r\n                    </ul>\r\n                </div>\r\n                <div id='Layers'>\r\n                    <Layers/>\r\n                </div>\r\n            </div>\r\n        ])\r\n      }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from 'react';\nimport MainMap from \"./Map/MainMap\"\nimport Sidebar from \"./sidebar/Sidebar\"\nimport \"./App.css\"\n\nclass App extends Component {\n    render() {\n        return ([\n          <div id='page_content'>\n            <MainMap key='mainmap_key'/>\n            <div id='sidebar'>\n              <Sidebar key='sidebar_key'/>\n            </div>\n          </div>\n        ])\n      }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'leaflet/dist/leaflet.css';\nimport './index.css';\nimport App from './App';\nimport Sortable from 'sortablejs';\nimport registerServiceWorker from './registerServiceWorker';\nimport {reorderLayers} from './Map/MainMap'\nimport $ from \"jquery\";\nimport {setBuffer} from './sidebar/tools/Buffer'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\n// Gets the class name for the layer list.\nvar layer_list = document.getElementById(\"sortable_layers\");\n\n// Makes the sidebar layer list selectable.\nvar layer = layer_list.getElementsByClassName(\"layer\");\nfor (var i = 0; i < layer.length; i++) {\n    layer[i].addEventListener(\"click\", function() {\n        var current = document.getElementsByClassName(\"active\");\n        current[0].className = current[0].className.replace(\" active\", \"\");\n        this.className += \" active\";\n    });\n}\n\n// Makes the sidebar layer list sortable\nSortable.create(layer_list,{\n    onEnd: function (e){\n        // Reorders the layers based on ID name ordering.\n        reorderLayers(getLayers())\n    }\n})\n\n$( '.buffer' ).click(function() {\n    $('.buffer_content').toggle();\n});\n\n$( '.dissolve' ).click(function() {\n    $('.dissolve_content').toggle();\n});\n\n$( '.intersection' ).click(function() {\n   console.log(getLayers())\n});\n\n$( '#apply_buffer' ).click(function() {\n    var selected_layer = document.getElementsByClassName(\"layer active\");\n    var meters = document.getElementById('buffer_number');\n    setBuffer(selected_layer[0].innerHTML, meters.value)\n});\n\n// Function that returns all layers (and their order.)\nfunction getLayers(){\n    var i;\n    var list_order = [];\n    var a = document.getElementsByClassName(\"layer\")\n    for (i=0; i < a.length; i++){\n        var class_name = ((a[i].className).split(\" \"))\n        list_order.push(class_name[0])\n    }\n    return list_order;\n}\n"],"sourceRoot":""}